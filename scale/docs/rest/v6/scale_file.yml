openapi: "3.0.0"
info:
  title: Scale File Services
  version: v6
paths:
  /v6/ingests:
    get:
      operationId: _rest_v6_scale_file_list
      summary: Scale File List
      description: Returns a list of all scale files
      parameters:
        -in: query
          name: page
          schema:
            type: integer
          description: The page of the results to return. Defaults to 1.
        -in: query
          name: page_size
          schema:
            type: integer
          description: The size of the page to use for pagination of results. |
            Defaults to 100, and can be anywhere from 1-1000.
        -in: query
          name: data_started
          schema:
            type: string
            format: date-time
          description: The start of the data time range to query
        -in: query
          name: data_ended
          schema:
            type: string
            format: date-time
          description: End of the data time range to query, defaults to the current time
        -in: query
          name: source_started
          schema:
            type: string
            format: date-time
          description: The start of the source time range to query
        -in: query
          name: source_ended
          schema:
            type: string
            format: date-time
          description: End of the source time range to query, defaults to the current time
        -in: query
          name: source_sensor_class
          schema:
            type: string
          description: Return only files for the given source sensor class. |
            Duplicate it to filter by multiple values.
        -in: query
          name: source_sensor
          schema:
            type: string
          description: Return only files for the given source sensor. |
            Duplicate it to filter by multiple values.
        -in: query
          name: source_collection
          schema:
            type: string
          description: Return only files for the given source collection. |
            Duplicate it to filter by multiple values.
        -in: query
          name: job_output
          schema:
            type: string
          description: Return only files for the given source task. |
            Duplicate it to filter by multiple values.
        -in: query
          name: modified_started
          schema:
            type: string
            format: date-time
          description: The start of the last modified time range to query
        -in: query
          name: modified_ended
          schema:
            type: string
            format: date-time
          description: End of the last modified time range to query, defaults to the current time
        -in: query
          name: order
          schema:
            type: string
          description: One or more fields to use when ordering the results. |
            Duplicate it to multi-sort, (ex: order=host_name&order=created) |
            Nested objects require a delimiter (ex: order=source_file__created)
            Prefix fields with a dash to reverse the sort, (ex: order=-created)
        -in: query
          name: job_output
          schema:
            type: string
          description: Return only files for the given job output. |
            Duplicate it to filter by multiple values.
        -in: query
          name: job_type_id
          schema:
            type: integer
          description: Return only files associated with a given job type identifier. |
            Duplicate it to filter by multiple values.
        -in: query
          name: job_type_name
          schema:
            type: string
          description: Return only files with a given job type name. Duplicate it |
            to filter by multiple values.
        -in: query
          name: job_id
          schema:
            type: integer
          description: Return only files produced by the given job identifier. |
            Duplicate it to filter by multiple values.
        -in: query
          name: recipe_id
          schema:
            type: integer
          description: Return only files associated with a given recipe identifier. |
            Duplicate it to filter by multiple values.
        -in: query
          name: recipe_node
          schema:
            type: string
          description: Return only files produced by the given recipe node. |
            Duplicate it to filter by multiple values.
        -in: query
          name: recipe_type_id
          schema:
            type: integer
          description: Return only files associated with a given recipe type identifier. |
            Duplicate it to filter by multiple values.
        -in: query
          name: batch_id
          schema:
            type: integer
          description: Return only files associated with a given batch identifier. |
            Duplicate it to filter by multiple values.
        -in: query
          name: file_name
          schema:
            type: string
          description: Return only files with a given file name. |
            Duplicate it to filter by multiple values.
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/file_list'
  /v6/files/{id}/:
    get:
      operationId: _rest_v6_file_details
      summary: File Details
      description: Returns a specific file and all its related model information
      parameters:
        -in: path
          name: id
          schema:
            type: integer
          description: id of an existing scale file
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/file_details'
  /v6/files/purge-source/:
    post:
      operationId: _rest_v6_purge_source
      summary: Purge Source File
      description: Removes all records related to the given source file. This includes records for the
       following models - BatchJob, BatchRecipe, FileAncestryLink, Ingest, Job, JobExecution,
       JobExecutionEnd, JobExecutionOutput, JobInputFile, Queue, Recipe, RecipeInputFile, RecipeNode,
       ScaleFile, and TaskUpdate. **This will also delete any product files from their respective
       workspace.**  
      requestBody:
        required: true
        content:
          application/json: 
            schema:
              title: Purge File Request
              type: object
              properties:
                file_id:
                  type: integer
                  description: The file id of the ScaleFile SOURCE file to purge.
                  example: 123
      responses:
        '204':
          description: |-
            204 no content - The message was recieved and the purge process has started.
        '400':
          description: |-
            400 bad request - There was an issue with the request, see error details for relevant details.

components:
  schemas:
    file_list:
      title: File List
      type: object
      properties:
        count:
          type: integer
          description: The total number of results that match the query parameters 
          example: 10
        next:
          type: string
          format: uri
          description: A URL to the next page of results.
          example: null
        previous:
          type: string
          format: uri
          description: A URL to the previous page of results.
          example: null
        results:
          type: array
          items:
            $ref: '#/components/schemas/file'
          description: List of ingest objects
          
    file:
      title: File
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
        workspace:
          $ref: '#/components/schemas/workspace'
        file_name:
          type: string
          description: The name of the source file.
          example: my_file.kml
        file_path:
          type: string
          description: The relative path of the file in the workspace.
          example: path/to/the/file.png
        media_type:
          type: string
          description: The IANA media type of the source file.
          example: application/vnd.google-earth.kml+xml
        file_size:
          type: integer
          description: The size of the file in bytes.  
          example: 1234
        data_type:
          type: array
          style: simple
          items:
            type: string  
          description: A list of string data type "tags" for the file.
        is_deleted:
          type: boolean
          description: Whether the source file has been deleted.
          example: True
        url:
          type: string
          format: uri
          description: The absolute URL to use for downloading the file.
          example: http://host.com/file/path/my_file.kml
        created:
          type: string
          format: date-time
          description: When the associated database model was initially created.
          example: 2015-09-10T15:24:53.503Z
        deleted:
          type: string
          format: date-time
          description: When the source file was deleted.
          example: 2015-09-10T15:24:53.987Z
        data_started:
          type: string
          format: date-time
          description: The start time of the source data being ingested.
          example: 2015-09-10T15:24:53.503Z
        data_ended:
          type: string
          format: date-time
          description: The ended time of the source data being ingested.
          example: 2015-09-10T15:24:53.987Z
        geometry:
          type: string
          description: The full geospatial geometry footprint of the source file. (WKT format)
          example: POLYGON((11 -11,22 -22,33 -33,44 -44))
        center_point:
          type: string
          description: The central geospatial location of the source file.
          example: POINT(11 -11)
        countries:
          type: array
          style: simple
          items:
            type: string  
          description: A list of zero or more strings with the ISO3 country codes for countries |
            contained in the geographic boundary of this file.
        last_modified:
          type: string
          format: date-time
          description: When the associated database model was last saved.
          example: 2015-09-10T15:24:53.987Z
        source_started:
          type: string
          format: date-time
          description: When collection of the underlying source file started. 
          example: 2015-09-10T15:24:53.987Z
        source_ended:
          type: string
          format: date-time
          description: When collection of the underlying source file ended. 
          example: 2015-09-10T15:24:53.987Z
        source_sensor_class:
          type: string
          description: The class of sensor used to produce the source file
          example: ABC
        source_sensor:
          type: string
          description: The specific identifier of the sensor used to produce the source file
          example: 1
        source_collection:
          type: string
          description: The collection of the source file
          example: 113394955
        source_task:
          type: string
          description: The task that produced the source file.
          example: my-task
        job:
          $ref: '#/components/schemas/job'
        job_exe:
          $ref: '#/components/schemas/job_exe'
          example: 2015-09-10T15:24:53.987Z
        job_output:
          type: string
          description: The name of the output from the job related to this file. 
          example: output_name_1
        job_type:
          $ref: '#/components/schemas/job_type'
        recipe:
          $ref: '#/components/schemas/recipe'
        recipe_node:
          type: string
          description: The recipe node that produced this file. 
          example: kml-footprint
        recipe_type:
          $ref: '#/components/schemas/recipe_type'
        batch:
          $ref: '#/components/schemas/batch'
        is_superseded:
          type: boolean
          description: Whether this file has been replaced and is now obsolete.
          example: True
        superseded:
          type: string
          format: date-time
          description: When the file became superseded by another file.
          example: 2015-09-10T15:24:53.987Z
      required:
      - id
      
    job:
      title: Job
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
      required:
      - id
      
    job_exe:
      title: Job Execution
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
      required:
      - id
      
    job_type:
      title: Job Type
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
        name:
          type: string
          description: The name of the job type.
          example: kml-footprint
        title:
          type: string
          description: Human readable display name of the Job Type
          example: KML Footprint
        description:
          type: string
          description: Extended description of the Job Type
          example: Creates a KML file
        revision_num:
          type: integer
          description: The current revision number of the job type, incremented for each edit. 
          example: 1
        icon_code:
          type: string
          description: A font-awesome icon code to use when representing this job type.
          example: f0ac
      required:
      - id

    recipe:
      title: Recipe
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
      required:
      - id
      
    recipe_type:
      title: Recipe Type
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
        name:
          type: string
          description: The name of the Recipe type.
          example: my-recipe
        title:
          type: string
          description: Human readable display name of the Recipe Type
          example: My Recipe
        description:
          type: string
          description: Extended description of the Recipe Type
          example: Processes some data
        revision_num:
          type: integer
          description: The current revision number of the recipe type, incremented for each edit. 
          example: 1
          
    batch:
      title: Batch
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
        title:
          type: string
          description: Human readable display name of the Batch
          example: My Batch
        description:
          type: string
          description: Extended description of the Batch
          example: My batch of recipes
        status:
          type: string
          description: The current status of the batch. Choices: [SUBMITTED, CREATED].
          example: SUBMITTED
        recipe_type:
          type: integer
          description: The recipe type that is associated with the batch.
          example: 6
        event:
          type: integer
          description: The trigger event that is associated with the batch
          example: 19
        creator_job:
          type: integer
          description: The job that is executed to create all the recipes defined by the batch. 
          example: 62

    file_details:
      allof:
        - ref: '#/components/schemas/file'
        - title: File Details
        - type: object
        properties:      
          meta_data:
            $ref: '#/components/schemas/metadata'
            
    job_type_details:
      title: Job Type
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the model. Can be passed to the details API call 
          example: 4
        name:
          type: string
          description: The name of the job type.
          example: kml-footprint
        version:
          type: string
          description: Version of the Job Type
          example: 1.0.0
        title:
          type: string
          description: Human readable display name of the Job Type
          example: KML Footprint
        description:
          type: string
          description: Extended description of the Job Type
          example: Creates a KML file
        category:
          type: string
          description: An optional overall category of the job type.
          example: footprint
        author_name:
          type: string
          description: The name of the person or organization that created the job algorithm.
          example: null
        author_url:
          type: string
          description: The address to a home page about the author or associated algorithm.
          example: null
        is_system:
          type: boolean
          description: Whether this is a system type.
          example: False
        is_long_running:
          type: boolean
          description: Whether this type is long running. A job of this type is |
            intended to run for a long time, potentially indefinitely, without |
            timing out and always being re-queued after a failure.
          example: False
        is_active:
          type: boolean
          description: Whether the job type is active (false once job type is archived).
          example: True
        is_operational:
          type: boolean
          description: Whether this job type is operational (True) or is still in a research & development (R&D) phase (False).
          example: True
        is_paused:
          type: boolean
          description: Whether the job type is paused (while paused no jobs of this type will be scheduled off of the queue).
          example: False
        icon_code:
          type: string
          description: A font-awesome icon code to use when representing this job type.
          example: f0ac
      required:
      - id